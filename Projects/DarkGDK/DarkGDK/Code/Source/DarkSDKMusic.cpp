
/////////////////////////////////////////////////////////////////////////////////////////////////////////
// MUSIC COMMANDS ///////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////




/*
/////////////////////////////////////////////////////////////////////////////////////////////////////////
// INCLUDES /////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "..\Include\DarkSDKMusic.h"
#include "..\Include\globstruct.h"

/////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////////////////////
// INTERNAL DB PRO FUNCTIONS ////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

void	ConstructorMusic			( HWND hWnd );
void	DestructorMusic				( void );
void	SetErrorHandlerMusic		( LPVOID pErrorHandlerPtr );
void	PassCoreDataMusic			( LPVOID pGlobPtr );
void	RefreshD3DMusic				( int iMode );
void	UpdateMusic					( void );

void	LoadMusic					( LPSTR szFilename, int iID );
void	LoadCDMusic					( int iTrackNumber, int iID );
void	DeleteMusic					( int iID );

void	PlayMusic					( int iID );
void	LoopMusic					( int iID );
void	StopMusic					( int iID );
void	PauseMusic					( int iID );
void	ResumeMusic					( int iID );	

void	SetMusicVolume				( int iID, int iVolume );				
void	SetMusicSpeed				( int iID, int iSpeed );

int		GetMusicExist				( int iID );
int		GetMusicPlaying				( int iID );
int		GetMusicLooping				( int iID );
int		GetMusicPaused				( int iID );
int		GetMusicVolume				( int iID );
int		GetMusicSpeed				( int iID );

int		GetNumberOfCDTracks			( void );							

/////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////////////////////
// DARK SDK FUNCTIONS ///////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

void dbLoadMusic ( LPSTR szFilename, int iID )
{
	LoadMusic ( szFilename, iID );
}

void dbLoadCDMusic ( int iTrackNumber, int iID )
{
	LoadCDMusic ( iTrackNumber, iID );
}

void dbDeleteMusic ( int iID )
{
	DeleteMusic ( iID );
}

void dbPlayMusic ( int iID )
{
	PlayMusic ( iID );
}

void dbLoopMusic ( int iID )
{
	LoopMusic ( iID );
}

void dbStopMusic ( int iID )
{
	StopMusic ( iID );
}

void dbPauseMusic ( int iID )
{
	PauseMusic ( iID );
}

void dbResumeMusic ( int iID )
{
	ResumeMusic ( iID );
}

void dbSetMusicVolume ( int iID, int iVolume )
{
	SetMusicVolume ( iID, iVolume );
}

void dbSetMusicSpeed ( int iID, int iSpeed )
{
	SetMusicSpeed ( iID, iSpeed );
}

int dbMusicExist ( int iID )
{
	return GetMusicExist ( iID );
}

int dbMusicPlaying ( int iID )
{
	return GetMusicPlaying ( iID );
}

int dbMusicLooping ( int iID )
{
	return GetMusicLooping ( iID );
}

int dbMusicPaused ( int iID )
{
	return GetMusicPaused ( iID );
}

int dbMusicVolume ( int iID )
{
	return GetMusicVolume ( iID );
}

int dbMusicSpeed ( int iID )
{
	return GetMusicSpeed ( iID );
}

int dbGetNumberOfCDTracks ( void )
{
	return GetNumberOfCDTracks ( );
}

void dbConstructorMusic ( HWND hWnd )
{
	ConstructorMusic ( hWnd );
}

void dbDestructorMusic ( void )
{
	DestructorMusic ( );
}

void dbSetErrorHandlerMusic	( LPVOID pErrorHandlerPtr )
{
	SetErrorHandlerMusic ( pErrorHandlerPtr );
}

void dbPassCoreDataMusic ( LPVOID pGlobPtr )
{
	PassCoreDataMusic ( pGlobPtr );
}

void dbRefreshD3DMusic ( int iMode )
{
	RefreshD3DMusic ( iMode );
}

void dbUpdateMusic ( void )
{
	UpdateMusic ( );
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////
*/