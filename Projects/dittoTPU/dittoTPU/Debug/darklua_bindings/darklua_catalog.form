<@export "../../"@>
//Generated by dittoTPU

#include "DarkGDK.h"
#include "darklua_plugin.h"

/*!
* Description: C++ to LUA Binding Functions, Plug-in: LUA for Windows 5.1.4 (http://luaforwindows.luaforge.net)
* 
* -# Input: lua_State
*
* -# Output:
*	-# int = lua_register expects a int value to be returned from binding functions
*/

<@list = 'bindfunctions'@>
<@list.loop@>
inline int darklua_<@list.item.name@>(lua_State *L){

	// Verify the number of parameters, we need at least one!
	if(lua_gettop(L) < <@list.count@>){ lua_pushstring(L, "Error! Less than <@list.count@> arguments"); lua_error(L);}
	
	//C++ Function	//push returnvalue to stack for use by LUA
	<@list.item.name@>(
		<@list = list.item.name@>
		<@list.loop@>
		DARKLUA_<@upper@><@list.item.name@><@>(<@list.item.index@>)<@remove.last@>,<@>
		<@list.next@>
		);

	//always return a int.
	return 0;
}
<@list.next@>


void darklua::catalog(void){
	
	/*!
	* Description: Catalog of Registered Bind Functions
	*
	* Plug-in: LUA for Windows 5.1.4 (http://luaforwindows.luaforge.net)
	*
	* -# Input:
	*	-# none
	*
	* -# Output:
	*	-# none
	*/

	<@list.loop@>
	lua_register(L, "<@list.item.name@>", darklua_<@list.item.name@>);
	<@list.next@>

}
